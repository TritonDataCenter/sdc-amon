#!/bin/bash
#
# Copyright (c) 2011 Joyent Inc., All rights reserved.
#
# Convenience wrapper for calling the Amon Relay API.
# Note that this only makes sense when the relay is running in
# developer or local mode: i.e. it is listening over HTTP. When in
# production with amon-agents running, it is typically listening over
# a zsock.
#

#export PS4='${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
if [ "$DEBUG" != "" ]; then
    set -o xtrace
fi
set -o errexit
set -o pipefail


JSON=$(which json 2>/dev/null || true)
CURL_OPTS="-H x-api-version:6.1.0 -H Content-Type:application/json"

# Arguments.
verbose=0
if [ "$1" == "-v" ]; then
    shift
    verbose=1
fi
path=$1
if [[ -z "$path" ]]; then
    echo "error: no PATH argument given"
    echo "Usage: amon-relay-api [-v] PATH [EXTRA-CURL-ARGS]"
    exit 1
fi
shift;


# Determine AMON Master API URL.
if [[ ! -z "$AMON_RELAY" ]]; then
    true
else
    AMON_RELAY=http://localhost:8081
fi
if [[ -z "$AMON_RELAY" ]]; then
    echo "error: could not determine Amon Relay URL, set 'AMON_RELAY' envvar"
    exit 1
fi


# Note: the 'echo' doesn't show the real quoting of args.

[ "$verbose" == "1" ] && echo "# curl -sS -i $CURL_OPTS --url $AMON_RELAY$path $@" >&2
if [[ ! -x "$JSON" ]]; then
    curl -sS -i $CURL_OPTS --url "$AMON_RELAY$path" "$@"
    echo ""
else
    curl -sS -i $CURL_OPTS --url "$AMON_RELAY$path" "$@" | json -q
fi
