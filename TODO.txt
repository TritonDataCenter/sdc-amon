# restart

- work through use cases
- update api
- update doc
- revisit design. Top Qs:
  - drop "contact" model if just using the email on customer record?
  - Run some checks on relay? Or have an agent in the GZ? For first pass
    we are NOT having agents running in each zone.
  - How is this exposed to end user.
- update the schedule

- tweaks:
  - s/:login/:customer and allow uuid
  - consider s/name/id for fields... to avoid expectation that a "name" can
    have capitalization and spaces. Also "id" says "this is a unique identifier
    for this thing"
- tack on amon records to ufds/tools/genldif


# use case: operator wants an alert for every zone fault

- FMA-based check in amon-agent in all CN GZs
  Q: Ask rm how to trigger that FMA event.
- Q: Exclude explicit reboots? What about an explicit reboot, but it doesn't
  come back up?
  A: Yes, exclude for now.
- Q: how to handle clearing an alarm. Does FMA give me an event for that?
  Ditto for non-fma-based zone status watching? Are we going to send an
  amon event for *every* zone running state every minute? No way.


# Old out-of-data dev schedule

Remaining days. Fixed holidays, milestones and non-amon work "[in brackets]".
Proposed target functionality/work for the other days. Note that John has
offered to do some work on amon if feasible.

- Tue,  9 Aug: Hack up watching zone start/stop and vm start/stop. Grokking Riak models and indexing.
- Wed, 10 Aug: Test plan for zone/vm start/stop in COAL. Test cases. Clean up test suite.
  -> Today trent moved over to help with no.de for nodeKO. Hence, amon
     probably not making SDC 6.5.
- Thu, 11 Aug: [Nectarine] Email notification plugin (nodemailer). Amon-master and amon-relay builds (bamboo, mountain-gorilla).
- Fri, 12 Aug: Amon-master and amon-relay builds (bamboo, mountain-gorilla).
- Mon, 15 Aug: amon & amonriak headnode zones (using Jerry's headnode-refactor process)
- Tue, 16 Aug: [Trent on Lime-no.de upgrade.]
- Wed, 17 Aug: [Lime-no.de updated. Trent on Lime-no.de upgrade.] 
- Thu, 18 Aug: More headnode zones work. Upgrade plan. 
- Fri, 19 Aug: Finish upgrading impl.
- Mon, 22 Aug: [Trent DSAPI work.]
- Tue, 23 Aug: [Trent DSAPI work.]
- Wed, 24 Aug: [Trent vacation]
- Thu, 25 Aug: [Olive] Retry/backoff everywhere (restify). 
- Fri, 26 Aug: [Trent vacation]
- Mon, 29 Aug: Amon load testing and test suite improvements. Amon db garbage collection.
- Tue, 30 Aug:
- Wed, 31 Aug: [Trent vacation]
- Thu,  1 Sep: [cutoff day (morning)]
- Fri,  2 Sep: [Trent vacation]
- Mon,  5 Sep: [Public holiday (Labour day)]
- Tue,  6 Sep:
- Wed,  7 Sep:
- Thu,  8 Sep: [Papaya, SDC 6.5 release]

Workdays left: 14 days (starting at 9-Aug) - 2 days lost to no.de help (at least).


# smartos event streams notes

- sysevent: core element, syseventadm
  https://mo.joyent.com/source/xref/illumos-joyent/usr/src/lib/libsysevent/libsysevent.c#2653
    sysevent_subscribe_event
  Note that zonecfg_notify_* itself calls a slightly different "sysevent_evc_subscribe":
    https://mo.joyent.com/source/xref/illumos-joyent/usr/src/lib/libsysevent/libevchannel.c#566
    https://mo.joyent.com/source/xref/illumos-joyent/usr/src/lib/libzonecfg/common/libzonecfg.c#6692
- zonecfg_notify_bind: uses sysevent, might not need that
  defined here: illumos/usr/src/lib/libzonecfg/common/libzonecfg.c
- fma:
  fmdump
  FMA: http://hub.opensolaris.org/bin/download/Community+Group+fm/WebHome/FMDPRM.pdf
  http://download.oracle.com/docs/cd/E19082-01/819-3196/6n5ed4h40/index.html#indexterm-289
  fminject to test
  


# TODOs for MVP

- Build/install (usb-headnode, bamboo, mountain-gorilla):
  - riak: discuss with others if separate riak clusters for separate apps
    or one shared one? billing/amon/hostrouter(?)/capi
  - master
  - relay (SMF packaging done; bamboo started)
  - agent
  - package.json: get specific about included versions
- Email Notification Plugin
- Retry/backoff everywhere: Restify-client supports everything needed here?
- event on zone/vm transitions: use zwatch
  - what does it mean to design to have events coming NOT from amon-agent
- Garbage collection of /events and orphans
- in riak, use uuid instead of customer_name for keys, if possible
- load testing (hook into mock cloud for this?)
  - estimate of design-limit on number of watches/notifications/events
  - e.g., what would it be on no.de
  - capacity planning:
    - http://wiki.basho.com/Cluster-Capacity-Planning.html
    - shared riak cluster with billing and ufds
    - http://wiki.basho.com/Bitcask-Capacity-Planning.html
- upgrade plan and testing
  - versioning (see ca/Makefile, and 1.0.0 instead of 6.1)
  - config handling
- headnode GZ cronjob that emails the /usbkey/config'd admin if amon and/or
  redis zones are down themselves.
- redis zone config: have "save 60 1". Make sure that isn't filling up disk
  with lots of snapshots. I *presume* this is just one or two files on
  disk, but should check.
- test: test how events are handled when redis runs out of memory
  Might want "maxmemory" and "maxmemory-policy ..." or "vm-enabled yes" in
  redis.conf


# Trent's scratch area

- upgrade deps/node and deps/npm versions to latest
- faking an event (calling Relay API):
    $ bin/amon-relay-api /events -X POST -d @-
    {"check":"joyent_whistle","status":"error","metrics":{"name":"amon:logscan","type":"Integer","value":2,"data":{"match":"i hear a tweet from someone"}}}
    ^D
- too much noise in the log: can't have the logs grow this fast
  don't log normal "HEAD /config" hits
- suppressing some zone transition events: How?
  - the start + reboot for zone provisioning:
    - talk with Orlando about a "ready" zoneconfig var set by provisioner
  - the stop/start of an intentional reboot (by an operator at the GZ
    command line)
    - sdc-amon-suppress ...   # or some command line that
  - intentional reboot or shutdown in adminui
    - either adminui or mapi's shutdown/reboot command would call Amon
      API to suppress?
    - or this is a separate action in adminui to manually suppress
  - intentional reboot or shutdown in portal/cloudapi
    - if MAPI above, then this is done.
  - intentional reboot of the *compute node* for maintenance by operator
    - sdc-amon-suppress command, and/or equivalent in adminui UI.
  - sdc-amon-suppress:
    - one shot?
    - toggle?
    - what is scope? Low-level: per zone name and per monitor name. Optionally
      just per monitor name for all applicable zones?
        "Suppress this monitor [until enabled again later]."
        "Suppress this monitor for machines X, Y and Z."
        "Suppress all monitors for machines X, Y and Z."
      Or is this only about suppressing *alarms*? I.e. only at the master-level.
      Yes.
        "Suppress alarms for monitors M and N [until enabled again later]."
        "Suppress alarms for monitor M for N for machines X, Y, and Z."
        "... for the next hour."
      general:
        "Suppress alarms
          for monitors M and N (or all)
          for machines X, Y and Z (or all)
          for a certain amount of time (or until re-enabled)."
        
- running on smartos global zone:
  devrun.sh: USE_ZSOCK=1
- /config -> /zonechecks
- use "/customers" prefix instead of "/pub" for Master API.
  


# Post-6.5 TODOs and RFEs

- CA Agent Plugin
- HTTP Agent Plugin
- revive twillio notification backend as "sms"
- Default to CAPI lookup user email on no contacts
- missing data alarms in master: ???
- edge-triggered alarms in master for checks: ???
- /events cleanup (look like other master apis)
- client SDK
- s/joyent/sdc/ in various runtime files and dirs
- Admin UI
- amon client: just integrate into node-smartdc?
- snmp (MarkC: "snmp traps". Me: What's that?)
- Interesting services for hooking into. Messaging services that might be useful:
    - http://aws.amazon.com/cloudwatch/
    - https://www.cloudkick.com/
    - http://www.splunk.com/
    - http://www.pagerduty.com/
